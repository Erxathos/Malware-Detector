import csv

# This script file is for preparing data from csv format to the convinient for NN format

# path where csv files with input parameters situated
default_path = 'NN_course_work/'
# file_names = ['first_round_clear_system.csv',
#            'virus.csv',
#            'virus_reboot.csv',
#            'clear_silent.csv',
#            'verification.csv',
#            'virus2.csv']
# included filenames of the csv files
file_names = ['virus_encr.csv',
                  'clear_browser.csv',
                  'virus_encr_2.csv',
                  'clear_high_soft_install.csv',
                  'virus_trojan_multiple.csv',
                  'virus_trojan_reboot.csv',
                  'clear_after_viruses_removed.csv',
                  'computer_test2.csv', 'computer_test1.csv', 'computer_test3.csv']
    
time_records_number = 71


# open selected parameters categories list
categories = []
with open('selected_categories2', 'r') as f:
    for s in f:
        categories.append(s.strip())

# open predefined set of results (csv files for them are missing)
columns = []
with open('input_columns', 'r') as values:
    j = 0
    for v in values:
        c = categories[j]
        j += 1
        d = v.split('\t')
        if columns == []:
            for i in range(len(d)):
                columns.append({})
        for i in range(len(columns)):
            columns[i][c] = {}
            columns[i][c]['totalValue'] = (float(d[i].strip()))

# open each file in direcrory and read all it's values to the columns dictionary
for file_name in file_names:
    data = {}
    with open(default_path + file_name) as csvfile:
        reader = csv.DictReader(csvfile)
        for row_name in categories:
            data[row_name] = {}
            data[row_name]['totalValue'] = float(0)
        cnt = 0
        for row in reader:
            if cnt >= time_records_number:
                break
            cnt += 1
            for row_name in categories:
                if row_name not in row:
                    print("Not found " + row_name)
                    continue
                try:
                    data[row_name]['totalValue'] += float(row[row_name])
                except ValueError:
                    pass
        print(cnt)
    columns.append(data)

# write all results to file input_values
with open('input_values', 'w') as input:
    for param in sorted(columns[0]):
        minValue = min([col[param]['totalValue'] for col in columns])
        maxValue = max([col[param]['totalValue'] for col in columns])
        line = []
        for col in columns:
            if (maxValue - minValue == 0) or ((col[param]['totalValue'] - minValue) == 0):
                line.append(0.)
            else:
                line.append((col[param]['totalValue'] - minValue) / (maxValue - minValue))
        input.write("\t".join([str(x) for x in line]) + '\n')
            
